import hypermedia.video.*;OpenCV opencv;int w = 320;int h = 240;int threshold = 80;boolean find=true;void setup() {    size( w*2+30, h*2+30 );    opencv = new OpenCV( this );    opencv.capture(w,h);}void draw() {    background(0);    opencv.read();    image( opencv.image(), 10, 10 );                // RGB image    image( opencv.image(OpenCV.GRAY), 20+w, 10 );   // GRAY image
    image( opencv.image(OpenCV.MEMORY), 10, 20+h ); // image in memory
    opencv.absDiff();    opencv.threshold(threshold);    image( opencv.image(OpenCV.GRAY), 20+w, 20+h ); // absolute difference image    Blob[] blobs = opencv.blobs( 100, w*h/3, 20, true );    noFill();    pushMatrix();    translate(20+w,20+h);    for( int i=0; i<blobs.length; i++ ) {The rectangle property of the Blob class can be used to draw a rectangle using the rect() method:        Rectangle bounding = blobs[i].rectangle;        noFill();        rect( bounding.x, bounding.y, bounding.width, bounding.height );Now capture the rest of the properties of the blob:        float area = blobs[i].area;        float circumference = blobs[i].length;        Point centroid = blobs[i].centroid;        Point[] points = blobs[i].points;        // centroid        stroke(0,0,255);Draw a small cross at the center of the blob:        line( centroid.x-5, centroid.y, centroid.x+5, centroid.y );        line( centroid.x, centroid.y-5, centroid.x, centroid.y+5 );        fill(255,0,255,64);        stroke(255,0,255);        if ( points.length>0 ) {            beginShape();            for( int j=0; j<points.length; j++ ) {                vertex( points[j].x, points[j].y );            }            endShape(CLOSE);        }    }    popMatrix();}void keyPressed() {    if ( key==' ' ) opencv.remember();}void mouseDragged() {    threshold = int( map(mouseX,0,width,0,255) );}public void stop() {    opencv.stop();    super.stop();}